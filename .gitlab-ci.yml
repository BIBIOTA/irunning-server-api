image: bibiota/irunning-server-api:latest

stages:
  - build
  - test
  - deploy
  - deploy-k8s

composer:
  stage: build
  script:
      - composer install --prefer-dist --no-ansi --no-interaction --no-progress --no-scripts
      - php artisan key:generate
      - php artisan octane:install --server=swoole
  artifacts:
    paths:
      - vendor/
      - .env
  cache:
    key: ${CI_COMMIT_REF_SLUG}-composer
    paths:
      - vendor/

phpunit:
  stage: test
  dependencies:
    - composer
  script:
    - /root/.composer/vendor/bin/phpunit --coverage-text --colors=never

codestyle:
  stage: test
  dependencies: []
  script:
    - /root/.composer/vendor/bin/phpcs --standard=PSR2 --exclude=Generic.Files.LineLength --extensions=php ./app ./tests

deploy:
  stage: deploy
  image: "docker:18.09"
  services:
    - docker:18-dind
  dependencies:
    - composer
  before_script:
    - apk -Uuv add curl bash python
    - curl https://sdk.cloud.google.com | CLOUDSDK_CORE_DISABLE_PROMPTS=1 bash
    - export PATH=$PATH:/root/google-cloud-sdk/bin/
    - echo "$GCP_SERVICE_KEY" > gcloud-service-key.json # Google Cloud service accounts
    - gcloud auth activate-service-account --key-file gcloud-service-key.json
    - gcloud auth configure-docker --quiet
    - docker login -u _json_key --password-stdin https://gcr.io < gcloud-service-key.json
  script:
    - docker build -t gcr.io/$GCP_PROJECT_ID/$IMAGE:$CI_PIPELINE_ID .
    - docker push gcr.io/$GCP_PROJECT_ID/$IMAGE:$CI_PIPELINE_ID
  only:
    - master

deploy-k8s:
  image: google/cloud-sdk
  stage: deploy-k8s
  before_script:
    - echo "$GCP_SERVICE_KEY" > gcloud-service-key.json # Google Cloud service accounts
    - gcloud auth activate-service-account --key-file gcloud-service-key.json
    - gcloud container clusters get-credentials $CLUSTER --zone $ZONE --project $GCP_PROJECT_ID
  script:
    - kubectl set image deployment $DEPLOYMENT $CONTAINER=gcr.io/$GCP_PROJECT_ID/$IMAGE:$CI_PIPELINE_ID
  dependencies:
    - deploy